package infoclimat

import (
  "testing"
  )

type record struct {
  s string
  f float64
}

var expectedResults = [...]record{
{"1,5",      1.5},  // coma
{"1.5",      1.5},  // dot
{"+1.5",     1.5},  // signed +
{"-1.5",     -1.5}, // signed -
{"-1,5",     -1.5},
{"+1,5",     1.5},
{"1,5 ",     1.5}, //space
{"1.5 ",     1.5},
{"+1.5 ",    1.5},
{"-1.5 ",    -1.5},
{"-1,5 ",    -1.5},
{"+1,5 ",    1.5},
{"1,5le",    1.5}, // char
{"1.5le",    1.5},
{"+1.5le",   1.5},
{"-1.5le",   -1.5},
{"-1,5le",   -1.5},
{"+1,5le",   1.5},
{"1,5+2.3",  1.5}, // follow + and dot
{"1.5+2.3",  1.5},
{"+1.5+2.3", 1.5},
{"-1.5+2.3", -1.5},
{"-1,5+2.3", -1.5},
{"+1,5+2.3", 1.5},
{"1,5+2,3",  1.5}, // follow + and coma
{"1.5+2,3",  1.5},
{"+1.5+2,3", 1.5},
{"-1.5+2,3", -1.5},
{"-1,5+2,3", -1.5},
{"+1,5+2,3", 1.5},
{"15",       15},  //15
{"+15",      15},  // signed +
{"-15",      -15}, // signed -
{"15 ",      15},  //space
{"+15 ",     15},
{"-15 ",     -15},
{"15le",     15}, // char
{"+15le",    15},
{"-15le",    -15},
{"15+2.3",   15}, // follow + and dot
{"+15+2.3",  15},
{"-15+2.3",  -15},
{"15+2,3",   15}, // follow + and coma
{"+15+2,3",  15},
{"-15+2,3",  -15},
{"-15+2,3",  -15},
{"-0.5,toto",  -0.5},
{"+0,5.12toto",  0.5},

}

func TestPurgeCellToGetMeasure(T*testing.T) {
	for _, v := range expectedResults {
		f := purgeCellToGetMeasure(v.s)
		if f == nil {
			T.Fatal("nil for ", v.s)
		}

		if v.f != *f {
			T.Fatal(*f, " for ", v.s)
		}
	}
}
